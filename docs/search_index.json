[
["tabeller.html", "Kapitel 8 Tabeller 8.1 Frekvenstabeller 8.2 Korstabeller 8.3 Exportera tabeller till html", " Kapitel 8 Tabeller Att presentera resultat och samband med diskreta variabler och kategorivariabler är en viktig del av att arbeta med + Frekvenstabeller i R, med och utan paket + Korstabeller i R, med och utan paket + Export av tabeller till Word. 8.1 Frekvenstabeller 8.1.1 Frekvenstabeller med table() # Läs in data. Välj ut födda 1961 och födda 1975 insark &lt;- read.csv2(&quot;D:/conscriptiondata.csv&quot;) # Välja ut insark för födda 1961 insark1 &lt;- insark[insark$year == 1961,] # Välj ut INSARK för födda 1975 insark2 &lt;- insark[insark$year == 1975,] # Skapa ett dataset av INSARK 1961 och 1975. insark3 &lt;- rbind(insark1, insark2) # Skapa nytt radid baserat på delpopulationen 1961 och 1975 insark3$newid &lt;- 1:length(insark3$id) Vi ska nu dra ett urval från INSARK. Anledningen till detta är enbart pedagogiskt, dvs vi får ett datamaterial som översiktlig. I praktiken används den data som tillgänglig! Beträffade funktionen set.seed() så används denna för att ange vilket slumpmässigt urval som dras. Annars erhålls inte samma skattningar som i exemplet. I praktiken vid urvalsdragning används inte set.seed() n &lt;- 1000 set.seed(12345) df &lt;- insark3[sample(insark3$newid, n), ] Baserat på urvalet är nu målet att skapa frekvenstabell som innehåller både absoluta och relativa frekvenser. För att skapa tabeller används funktionen table() och hantera både tabuleringar av en enda variabler eller korstabeller av två eller flera variabler. Notera att table() enbart presenterar frekvenser för att få utförligare resultat krävs att tabellen sparas som ett objekt, på vilket andra funktioner kan användas. prop.table() tillämpad på ett objekt från table() och beräknar proportioner baserat på totala antalet (default), radvisa frekvenser eller kolumnfrekvenser. addmargins() ger marginalerna i ett tabellobjeket. Med argumentet margins anges om alla marginaler, radmarginalen eller kolumnmargialen ska beräknas. Baserat på urvalet är nu målet är att skapa en tabell som beskriver variabeln pych, som är bedömd psykisk funktionsförmåga som är en variabel med 9 steg, där 1 är sämst och 9 är bäst. Det använda colnames() och rownames() går det att namnge kolumner och rader i tabellen. # Univariat tabell med frekvenser och proportioner freqtable_psych &lt;- table(df$psych) proptable_psych &lt;- prop.table(freqtable_psych) table_psych &lt;- cbind(freqtable_psych, 100*proptable_psych) table_psych &lt;- addmargins(table_psych, margin = 1) colnames(table_psych) &lt;- c(&quot;Frekvens&quot;, &quot;%&quot;) rownames(table_psych) &lt;- c(&quot;Kat 1&quot;, &quot;Kat 2&quot;, &quot;Kat 3&quot;, &quot;Kat 4&quot;, &quot;Kat 5&quot;, &quot;Kat 6&quot;, &quot;Kat 7&quot;, &quot;Kat 8&quot;, &quot;Kat 9&quot;) &gt; Error in dimnames(x) &lt;- dn: length of &#39;dimnames&#39; [1] not equal to array extent freqtable_psych &gt; &gt; 1 2 3 4 5 6 7 8 9 &gt; 19 67 122 150 220 200 145 65 12 proptable_psych &gt; &gt; 1 2 3 4 5 6 7 8 9 &gt; 0.019 0.067 0.122 0.150 0.220 0.200 0.145 0.065 0.012 table_psych &gt; Frekvens % &gt; 1 19 1.9 &gt; 2 67 6.7 &gt; 3 122 12.2 &gt; 4 150 15.0 &gt; 5 220 22.0 &gt; 6 200 20.0 &gt; 7 145 14.5 &gt; 8 65 6.5 &gt; 9 12 1.2 &gt; Sum 1000 100.0 Notera att tabellen med proportioner multipliceras med 100 för att få resultaten i procent. Det kan även finns anledning att avrunda resultat med funktionen round(). Antalet decimaler i avrundningen beror på behovet av precision i resultatredovisningen. Ska tabellen användas i beräkningar i R, alltså inte som en del av en rapport, bör ingen avrundning ske. table_psych &lt;- cbind(round(freqtable_psych, 0), round(100*proptable_psych), 0) För att namnge raderna i tabellen går det även att skapa en faktor av psych, där nivåern namnges med funktionen levels(). # För att namnge raderna kan göra om psych-variabeln till en faktor som namnges. df$psych_cat &lt;- factor(df$psych, ordered = TRUE) levels(df$psych_cat) = c(&quot;Kat 1&quot;, &quot;Kat 2&quot;, &quot;Kat 3&quot;, &quot;Kat 4&quot;, &quot;Kat 5&quot;, &quot;Kat 6&quot;, &quot;Kat 7&quot;, &quot;Kat 8&quot;, &quot;Kat 9&quot;) freqtable_psych_cat &lt;- table(df$psych_cat) proptable_psych_cat &lt;- prop.table(freqtable_psych_cat) table_psych_cat &lt;- cbind(round(freqtable_psych_cat), round(100*proptable_psych_cat, 1)) table_psych_cat &lt;- addmargins(table_psych_cat, 1) colnames(table_psych_cat) &lt;- c(&quot;Frekvens&quot;, &quot;%&quot;) table_psych_cat &gt; Frekvens % &gt; Kat 1 19 1.9 &gt; Kat 2 67 6.7 &gt; Kat 3 122 12.2 &gt; Kat 4 150 15.0 &gt; Kat 5 220 22.0 &gt; Kat 6 200 20.0 &gt; Kat 7 145 14.5 &gt; Kat 8 65 6.5 &gt; Kat 9 12 1.2 &gt; Sum 1000 100.0 Något som är viktigt vid alla dataanlyser är att veta hur funktionerna som används hanterar saknade data. Default-inställningen för table() är att ignorera sådana observationer. För att redovisa saknade data som en egen kategori används argumentet useNA = &quot;ifany&quot;. # Skapa en bortfallsvariabel på position 3 och 4 i variabeln psych df$psych_mis &lt;- df$psych df$psych_mis[c(3,4)] &lt;- NA table_psych_mis &lt;- table(df$psych_mis, useNA = &quot;ifany&quot;) table_psych_mis &gt; &gt; 1 2 3 4 5 6 7 8 9 &lt;NA&gt; &gt; 19 67 121 150 219 200 145 65 12 2 8.1.2 Frekvenstabeller med freq() Även om table() är väldigt flexibelt och användbart finns det också färdiga funktioner som kan förenkla koden. Ett R-paket för beskriva och summera data är **summarytools*. Skriv därför install.packages(&quot;summarytools&quot;). På MacOS krävs eventuellt även av ett program som heter XQuartz, som görs externt från https://www.xquartz.org/releases/index.html. När programmet är installerat kan följande kod användas för att enkelt skapa en frekvenstabell. Funktionen freq() används för att skapa en frekvens och för att replikera tabellerna ovan används följande kod. library(&quot;summarytools&quot;) &gt; Registered S3 method overwritten by &#39;pryr&#39;: &gt; method from &gt; print.bytes Rcpp tab_psych &lt;- freq(df$psych, report.nas = FALSE, cumul = FALSE) tab_psych_cat &lt;- freq(df$psych_cat, report.nas = FALSE, cumul = FALSE) tab_psych_mis &lt;- freq(df$psych_cat, report.nas = TRUE, cumul = FALSE) tab_psych &gt; Frequencies &gt; df$psych &gt; &gt; Freq % &gt; ----------- ------ -------- &gt; 1 19 1.90 &gt; 2 67 6.70 &gt; 3 122 12.20 &gt; 4 150 15.00 &gt; 5 220 22.00 &gt; 6 200 20.00 &gt; 7 145 14.50 &gt; 8 65 6.50 &gt; 9 12 1.20 &gt; Total 1000 100.00 tab_psych_cat &gt; Frequencies &gt; df$psych_cat &gt; Type: Ordered Factor &gt; &gt; Freq % &gt; ----------- ------ -------- &gt; Kat 1 19 1.90 &gt; Kat 2 67 6.70 &gt; Kat 3 122 12.20 &gt; Kat 4 150 15.00 &gt; Kat 5 220 22.00 &gt; Kat 6 200 20.00 &gt; Kat 7 145 14.50 &gt; Kat 8 65 6.50 &gt; Kat 9 12 1.20 &gt; Total 1000 100.00 tab_psych_mis &gt; Frequencies &gt; df$psych_cat &gt; Type: Ordered Factor &gt; &gt; Freq % Valid % Total &gt; ----------- ------ --------- --------- &gt; Kat 1 19 1.90 1.90 &gt; Kat 2 67 6.70 6.70 &gt; Kat 3 122 12.20 12.20 &gt; Kat 4 150 15.00 15.00 &gt; Kat 5 220 22.00 22.00 &gt; Kat 6 200 20.00 20.00 &gt; Kat 7 145 14.50 14.50 &gt; Kat 8 65 6.50 6.50 &gt; Kat 9 12 1.20 1.20 &gt; &lt;NA&gt; 0 0.00 &gt; Total 1000 100.00 100.00 Som vanligt har funktioner i R ofta många argument där man anger exakt vad funktionen ska göra. I exemplen redogörs bara för ett fåtal av dessa och ofta krävs att det att man använder sig av hälpfilen för en funktion, i detta fall help(freq), eller att man provar ändra i den kod som finns. 8.2 Korstabeller 8.2.1 Korstabeller med table() Flera variabler kan korstabuleras i table(). Variabeln som ska finnas på raden kommer före variabeln som på kolumnen. Tabellen som erhålls kallas i fallet med två inkluderade variabler för tvåvägs-korstabell. Om det går att översätta variablerna i termer av förklarande variabel och beroende variabel, sätts den förklarande variabeln i regel kolumnsvis. Det kan dock av utrymmesskäl finnas anledning att rucka på denna princip. Vi ska nu beskriva psyskologisk bedömning uppdelat på födda 1961 respektive 1975. Först en korstabell med frekvenser och baserat på denna skapa en korstabell med relativa frekvenser baserat på kolumnprocent. Notera att det kräver en del pusslande, men vi har stor flexibilitet vad gäller att konstruera tabellen. freqtable_psych_year &lt;- table(df$psych, df$year) freqtable_psych_year 1961 1975 1 10 9 2 29 38 3 64 58 4 78 72 5 112 108 6 91 109 7 55 90 8 27 38 9 6 6 proptable_psych_year &lt;- 100*prop.table(freqtable_psych_year, margin = 2 ) # 2 är kolumnprocent # Bind ihop frekvenser och relative frekvenser table_psych_year_bind &lt;- cbind(freqtable_psych_year[,1], round(proptable_psych_year[,1], 1), freqtable_psych_year[,2], round(proptable_psych_year[,2], 1)) table_psych_year &lt;- addmargins(table_psych_year_bind, 1) colnames(table_psych_year) &lt;- c(&quot;1961&quot;, &quot;%&quot;, &quot;1975&quot;, &quot;%&quot;) table_psych_year 1961 % 1975 % 1 10 2.1 9 1.7 2 29 6.1 38 7.2 3 64 13.6 58 11.0 4 78 16.5 72 13.6 5 112 23.7 108 20.5 6 91 19.3 109 20.6 7 55 11.7 90 17.0 8 27 5.7 38 7.2 9 6 1.3 6 1.1 Sum 472 100.0 528 99.9 Alternativt kan vi använda funktionen ctable() från paketet summarytoools. tab_psych_year &lt;- ctable(df$psych, df$year, prop = &quot;c&quot;) tab_psych_year Cross-Tabulation, Column Proportions psych * year Data Frame: df ------- ------ -------------- -------------- --------------- year 1961 1975 Total psych 1 10 ( 2.1%) 9 ( 1.7%) 19 ( 1.9%) 2 29 ( 6.1%) 38 ( 7.2%) 67 ( 6.7%) 3 64 ( 13.6%) 58 ( 11.0%) 122 ( 12.2%) 4 78 ( 16.5%) 72 ( 13.6%) 150 ( 15.0%) 5 112 ( 23.7%) 108 ( 20.5%) 220 ( 22.0%) 6 91 ( 19.3%) 109 ( 20.6%) 200 ( 20.0%) 7 55 ( 11.7%) 90 ( 17.0%) 145 ( 14.5%) 8 27 ( 5.7%) 38 ( 7.2%) 65 ( 6.5%) 9 6 ( 1.3%) 6 ( 1.1%) 12 ( 1.2%) Total 472 (100.0%) 528 (100.0%) 1000 (100.0%) ------- ------ -------------- -------------- --------------- 8.3 Exportera tabeller till html Det kan vara omständligt att exportera data från R till Word. En smidigt lösning är att spara tabellerna i html-format, vilket gör tabellerna plattformsoberoende. Kom ihåg att det inte är nödvändigt att lägga in tabellerna i Word förrän manuset närmar sig att bli klart. För att exportera tabeller gjorda med table() används paketet xtable och funktionen xtable() tillsammans med funktionen print() (som finns i basversionen av R). Installera därför nödvändigt paket install.packages(&quot;xtable&quot;) och kör sedan nedanstående kod. Du måste ange i sökvägen var filen ska sparas. library(&quot;xtable&quot;) Attaching package: &#39;xtable&#39; The following objects are masked from &#39;package:summarytools&#39;: label, label&lt;- print(xtable(table_psych_cat), type=&quot;html&quot;, file=&quot;D:/table1.html&quot;) print(xtable(table_psych_year), type=&quot;html&quot;, file=&quot;D:/table2.html&quot;) För exportera tabeller gjorda i summarytools kan vi använda funktionen print() direkt. print(tab_psych_cat, headings = FALSE, file=&quot;D:/tab1.html&quot;) Switching method to &#39;browser&#39; Output file written: D:\\tab1.html print(tab_psych_year, headings = FALSE, file=&quot;D:/tab2.html&quot;) Switching method to &#39;browser&#39; Output file written: D:\\tab2.html För att klistra in tabellerna i ordbehandlingsprogram så högerklickar du någonstans i webläsaren, välj sedan markera all, kopiera, och klistra in. "]
]
